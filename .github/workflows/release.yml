name: Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    types: [opened, synchronize]

jobs:
  avoid_redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: NPM private login
        run: echo ${{ secrets.NPM_AUTH_TOKEN }} >> ./.npmrc

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --no-optional

      - name: Build
        run: npm run build --if-present

  #     - name: Depcheck
  #       run: npm run depcheck

  lint:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: CheckOut
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: NPM private login
        run: echo ${{ secrets.NPM_AUTH_TOKEN }} >> ./.npmrc

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --no-optional

      - name: Build
        run: npm run build --if-present

      - name: Lint
        run: npm run lint

     # - name: Test
        # run: yarn test --slow 0 --g 'StakedNFTs'

  docker:
    # needs: [test, dependency-check, sonarqube]
    needs: [lint, dependency-check]
    # Only build docker on push/merge, not on PRs
    if: github.event_name	== 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Registry Turinlabs
        uses: docker/login-action@v1
        with:
          registry: registry.turinlabs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - id: docker-tag
      #   name: "Getting tag from github.ref"
      #   uses: yuya-takeyama/docker-tag-from-github-ref-action@v1

      - id: package-version
        name: 'Getting version from package.json'
        uses: martinbeentjes/npm-get-version-action@master

      - id: docker-tag-develop
        name: 'Generating docker tag per develop'
        if: github.ref_name == 'develop'
        run: echo "docker_tag=${{ steps.package-version.outputs.current-version }}-dev" >> $GITHUB_ENV

      - id: docker-tag-master
        name: 'Generating docker tag for master'
        if: github.ref_name == 'master'
        run: echo "docker_tag=${{ steps.package-version.outputs.current-version }}" >> $GITHUB_ENV

      - id: docker-build
        name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ env.docker_tag }}
        with:
          secrets: |
            npm_auth_token=${{ secrets.NPM_AUTH_TOKEN }}
          context: .
          platforms: linux/amd64
          #push: ${{ startsWith(github.ref, 'refs/tags/') || steps.package-version.output.current-version }}
          push: true
          tags: registry.turinlabs.com/${{ github.event.repository.name }}:${{ env.docker_tag }}
